server:
  affinity: ""
  ha:
    enabled: true
    replicas: 3
    raft: 
      enabled: true
      setNodeId: true
      config: |
            cluster_name = "vault-integrated-storage"
            listener "tcp" {
               address = "[::]:8200"
               cluster_address = "[::]:8201"
               tls_disable = "true"
            }
            service_registration "kubernetes" {}
            storage "raft" {
              path = "/vault/data"
              retry_join {
                leader_api_addr = "https://vault-0.vault-internal:8200"
                leader_ca_cert_file = "/vault/userconfig/ca/ca.crt"
                leader_client_cert_file = "/vault/userconfig/tls/tls.crt"
                leader_client_key_file = "/vault/userconfig/tls/tls.key"
              }
              retry_join {
                leader_api_addr = "https://vault-1.vault-internal:8200"
                leader_ca_cert_file = "/vault/userconfig/ca/ca.crt"
                leader_client_cert_file = "/vault/userconfig/tls/tls.crt"
                leader_client_key_file = "/vault/userconfig/tls/tls.key"
              }
              retry_join {
                leader_api_addr = "https://vault-2.vault-internal:8200"
                leader_ca_cert_file = "/vault/userconfig/ca/ca.crt"
                leader_client_cert_file = "/vault/userconfig/tls/tls.crt"
                leader_client_key_file = "/vault/userconfig/tls/tls.key"
              }
  volumes:
  - name: vault-tls
    secret:
      secretName: vault-tls
  - name: vault-ca
    secret:
      secretName: injector-ca-secret
  
  volumeMounts:
  - name: vault-tls
    mountPath: /vault/userconfig/tls
    readOnly: true
  - name: vault-ca
    mountPath: /vault/userconfig/ca
    readOnly: true
# For HA configuration and because we need to manually init the vault,
# we need to define custom readiness/liveness Probe settings
readinessProbe:
  enabled: true
  path: "/v1/sys/health?standbyok=true&sealedcode=204&uninitcode=204"
livenessProbe:
  enabled: true
  path: "/v1/sys/health?standbyok=true"
  initialDelaySeconds: 60
# extraEnvironmentVars is a list of extra environment variables to set with the stateful set. These could be
# used to include variables required for auto-unseal.
extraEnvironmentVars:
    VAULT_CACERT: /vault/userconfig/ca/ca.crt

# This configures the volume used for storing Vault data when not using external storage such as Consul.
dataStorage:
  #  Enables a persistent volume to be created for storing Vault data when not using an external storage service.
  enabled: true
  # Size of the volume to be created for Vault's data storage when not using an external storage service.
  size: 8Gi
  # Name of the storage class to use when creating the data storage volume.
  storageClass: longhorn
  # Access Mode of the storage device being used for the PVC
  accessMode: ReadWriteOnce
  # Configures the path in the Vault pod where the audit storage will be mounted.
  mountPath: /vault/data
auditStorage:
  #  Enables a persistent volume to be created for storing Vault data when not using an external storage service.
  enabled: true
  # Size of the volume to be created for Vault's data storage when not using an external storage service.
  size: 8Gi
  # Name of the storage class to use when creating the data storage volume.
  storageClass: longhorn
  # Access Mode of the storage device being used for the PVC
  accessMode: ReadWriteOnce
  # Configures the path in the Vault pod where the audit storage will be mounted.
  mountPath: /vault/audit
# Vault UI
ui:
  enabled: true
  serviceType: "LoadBalancer"
  serviceNodePort: null
  externalPort: 8200